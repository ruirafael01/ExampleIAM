// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Example.IdentityServer.Infrastructure;

#nullable disable

namespace Example.IdentityServer.Infrastructure.Migrations
{
    [DbContext(typeof(IdentityServerContext))]
    partial class IdentityServerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Example.IdentityServer.Domain.AggregatesModel.PersonAggregate.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("CanViewAccountingRecords")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("SYSUTCDATETIME()");

                    b.Property<DateTimeOffset?>("ModificationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("PersonLanguageId")
                        .HasColumnType("int");

                    b.Property<int>("PersonRoleId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("PersonLanguageId");

                    b.HasIndex("PersonRoleId");

                    b.ToTable("persons", "ids");
                });

            modelBuilder.Entity("Example.IdentityServer.Domain.AggregatesModel.PersonAggregate.PersonLanguage", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("personLanguages", "ids");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "en"
                        },
                        new
                        {
                            Id = 2,
                            Name = "dk"
                        });
                });

            modelBuilder.Entity("Example.IdentityServer.Domain.AggregatesModel.PersonAggregate.PersonRole", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("personRoles", "ids");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "standard"
                        },
                        new
                        {
                            Id = 2,
                            Name = "accountant"
                        },
                        new
                        {
                            Id = 3,
                            Name = "administrator"
                        });
                });

            modelBuilder.Entity("Example.IdentityServer.Domain.AggregatesModel.PersonAggregate.Person", b =>
                {
                    b.HasOne("Example.IdentityServer.Domain.AggregatesModel.PersonAggregate.PersonLanguage", "Language")
                        .WithMany()
                        .HasForeignKey("PersonLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Example.IdentityServer.Domain.AggregatesModel.PersonAggregate.PersonRole", "Role")
                        .WithMany()
                        .HasForeignKey("PersonRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Example.IdentityServer.Domain.AggregatesModel.PersonAggregate.PersonEmail", "Email", b1 =>
                        {
                            b1.Property<Guid>("PersonId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(320)
                                .HasColumnType("nvarchar(320)");

                            b1.HasKey("PersonId");

                            b1.ToTable("personEmails", "ids");

                            b1.WithOwner()
                                .HasForeignKey("PersonId");
                        });

                    b.OwnsOne("Example.IdentityServer.Domain.AggregatesModel.PersonAggregate.PersonName", "Name", b1 =>
                        {
                            b1.Property<Guid>("PersonId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("nvarchar(40)");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasMaxLength(80)
                                .HasColumnType("nvarchar(80)");

                            b1.HasKey("PersonId");

                            b1.ToTable("personNames", "ids");

                            b1.WithOwner()
                                .HasForeignKey("PersonId");
                        });

                    b.OwnsOne("Example.IdentityServer.Domain.AggregatesModel.PersonAggregate.PersonPassword", "Password", b1 =>
                        {
                            b1.Property<Guid>("PersonId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(500)
                                .HasColumnType("nvarchar(500)");

                            b1.HasKey("PersonId");

                            b1.ToTable("personPasswords", "ids");

                            b1.WithOwner()
                                .HasForeignKey("PersonId");
                        });

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Name")
                        .IsRequired();

                    b.Navigation("Password")
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
